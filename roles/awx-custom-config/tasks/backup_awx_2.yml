---

- name: Ensure root users ~/.ssh/ folder exists on AWX
  file:
    path: /root/.ssh/
    state: directory
    mode: 0700
    owner: root
    group: root

- name: Create borg user on AWX server
  ansible.builtin.user:
    name: borg
    shell: /bin/bash
    password: '!'
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_file: .ssh/borgmatic

- name: Create borg user on backup server
  delegate_to: '{{ backup_server_ip }}'
  ansible.builtin.user:
    name: borg
    shell: /bin/bash
    password: '!'

- name: Install Borgmatic on AWX
  apt:
    pkg:
    - borgmatic

- name: Install Borgmatic on the backup server
  delegate_to: '{{ backup_server_ip }}'
  apt:
    pkg:
    - borgmatic

- name: Collect public SSH key to variable
  ansible.builtin.slurp:
    src: /home/borg/.ssh/borgmatic.pub
  register: borgmatic_public_key

- name: Print public SSH key
  ansible.builtin.debug:
    msg: "{{ borgmatic_public_key['content'] | b64decode }}"

- name: Ensure root users ~/.ssh/ folder exists on backup server
  delegate_to: '{{ backup_server_ip }}'
  ansible.builtin.file:
    path: /home/borg/.ssh/
    state: directory
    mode: 0700
    owner: borg
    group: borg

- name: Write public SSH key to authorized_keys of backup server'
  delegate_to: '{{ backup_server_ip }}'
  ansible.builtin.lineinfile:
    path: /home/borg/.ssh/authorized_keys
    line: "{{ borgmatic_public_key['content'] | b64decode }}"
    owner: borg
    group: borg
    mode: '0600'
    create: yes

- name: Add SSH config entry for accessing the backup server
  ansible.builtin.blockinfile:
    path: "/home/borg/.ssh/config"
    marker_begin: "BEGIN SSH config entry for backup server"
    marker_end: "END SSH config entry for backup server"
    block: |
      Host {{ backup_server_ip }}
          HostName {{ backup_server_ip }}
          User borg
          Port 22
          IdentityFile /home/borg/.ssh/borgmatic
          IdentitiesOnly=yes
    owner: borg
    group: borg
    mode: '0600'
    create: yes

- name: Perform initial SSH handshake, accept the key blindly
  become: yes
  become_user: borg
  command: |
      ssh -o "StrictHostKeyChecking no" {{ backup_server_ip }} exit
